trigger:
  - develop

variables:
  azureSubscription: "68264826-647b-4ccb-9242-a4e15fb79bdf"
  webAppName: "msteamsmeetingbreak"
  environmentName: "msteamsmeetingbreak"
  vmImageName: "ubuntu-latest"

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)

        steps:
          - script: npm install
            displayName: "Install dependencies"

          - script: npm run build
            displayName: "Build"

          - script: |
              cp -r $(System.DefaultWorkingDirectory)/build $(Build.ArtifactStagingDirectory)
            displayName: "Stage artifacts"

          - task: ArchiveFiles@2
            displayName: "Archive web app files"
            inputs:
              rootFolderOrFile: "$(Build.ArtifactStagingDirectory)"
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
              replaceExistingArchive: true

          - task: ArchiveFiles@2
            displayName: "Create Teams package"
            inputs:
              rootFolderOrFile: "$(System.DefaultWorkingDirectory)/resources/Manifest"
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactsStagingDirectory)/$(Build.BuildId).Teams.zip
              replaceExistingArchive: true

          - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            displayName: "Publish Web artifact"
            artifact: "MeetingBreak-Web"

          - publish: $(Build.ArtifactsStagingDirectory)/$(Build.BuildId).Teams.zip
            displayName: "Publish Teams artifact"
            artifact: "MeetingBreak-Teams"

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: Deploy
        displayName: Deploy
        environment: $(environmentName)
        pool:
          vmImage: $(vmImageName)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureRmWebAppDeployment@4
                  displayName: "Azure App Service Deploy: msteamsmeetingbreak"
                  inputs:
                    azureSubscription: $(azureSubscription)
                    appType: webAppLinux
                    WebAppName: $(webAppName)
                    packageForLinux: "$(Pipeline.Workspace)/MeetingBreak-Web/$(Build.BuildId).zip"
                    RuntimeStack: "NODE|10.10"
                    StartupCommand: "npm run start"
                    ScriptType: "Inline Script"
                    InlineScript: |
                      npm install
